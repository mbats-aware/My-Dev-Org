# validate on seperate instance
# on success, deploy to validation box AND QA box
# on failure email someone
name: QA Deployment

on: 
  pull_request:
    types: 
      - closed
    paths:
      - "force-app/main/default/**"

jobs:
  validate:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    environment: QA
    container:
      image: salesforce/salesforcedx:latest-full
    steps:
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            "QA Package Validation in Progress"
      - uses: actions/checkout@v2
        with:
          #ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Authenticate QA Org
        run: |
          echo ${{ secrets.AUTH_URL }} > authURL
          sfdx auth:sfdxurl:store -f authURL -a "QA Org"
      - name: Generate Deployment Package
        run: |
          sfdx force:source:convert -r "force-app" -d "deploy/" --json
      - name: Validate Deployment
        id: validation
        run: |
          ID=$(sfdx force:source:deploy -p "deploy/" -c -u "QA Org" -w=0 --json | jq -r .result.id)
          echo "deployId=$ID" >> $GITHUB_OUTPUT

          URL=$(sfdx force:org:display -u "QA Org" --json | jq -r .result.instanceUrl)
          echo "orgUrl=$URL" >> $GITHUB_OUTPUT
      - name: Update PR
        uses: mshick/add-pr-comment@v2
        if: ${{ always() }}
        with:
          message: |
            "QA Package Validation Successful"
          message-failure: |
            "QA Package Validation Failed"
      - name: Deploy Package
        if: ${{ success() }}
        run: |
          echo "Validation Deployment ID: ${{ steps.validation.outputs.deployId }}"
          echo "QA Org URL: ${{ steps.validation.outputs.orgUrl }}"
          sfdx force:source:deploy --verbose -u "QA Org" -q "${{ steps.validation.outputs.deployId }}"

